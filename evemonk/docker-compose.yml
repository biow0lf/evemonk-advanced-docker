version: '3.7'

volumes:
  postresql_data:
  redis_data:
  app_shared:
  elasticsearch_data:
  https_portal:
  prometheus_data:
  grafana_data:

services:
  nginx:
    image: 'nginx:1.16.0'
    container_name: evemonk_nginx
    restart: unless-stopped
    volumes:
      - 'app_shared:/shared'
      - './nginx-evemonk.conf:/etc/nginx/conf.d/default.conf:ro'
    depends_on:
      - backend

  https_portal:
    image: steveltn/https-portal:1.7.1
    container_name: evemonk_https_portal
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - 'https_portal:/var/lib/https-portal'
    environment:
      STAGE: 'production'
      DOMAINS: 'evemonk.com -> http://nginx,
                www.evemonk.com => https://evemonk.com,
                cadvisor.evemonk.com -> http://cadvisor:8080,
                pghero.evemonk.com -> http://pghero:3000'

  redis:
    image: 'redis:5.0.5'
    container_name: evemonk_redis
    restart: unless-stopped
    volumes:
      - 'redis_data:/data'

  memcached:
    image: 'memcached:1.5.16'
    container_name: evemonk_memcached
    restart: unless-stopped
    command: memcached -m 64

  postgresql:
    image: 'postgres:11.3'
    container_name: evemonk_postgresql
    restart: unless-stopped
    volumes:
      - 'postresql_data:/var/lib/postgresql/data'

#  prometheus:
#    image: 'prom/prometheus:v2.10.0'
#    container_name: evemonk_prometheus
#    restart: unless-stopped
#    volumes:
#      - './prometheus/:/etc/prometheus/'
#      - 'prometheus_data:/prometheus'
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
#      - '--web.console.templates=/usr/share/prometheus/consoles'
#    ports:
#      - '9090:9090'
#    depends_on:
#      - backend
#      - cadvisor

#  node_exporter:
#    image: 'prom/node-exporter:v0.18.1'
#    container_name: evemonk_node_exporter
#    restart: unless-stopped
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command:
#      - '--path.procfs=/host/proc'
#      - '--path.sysfs=/host/sys'
#      - '--collector.filesystem.ignored-mount-points'
#      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
#    ports:
#      - '9100:9100'

  cadvisor:
    image: 'google/cadvisor:v0.33.0'
    container_name: evemonk_cadvisor
    restart: unless-stopped
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'

#  alertmanager:
#    image: 'prom/alertmanager:v0.17.0'
#    container_name: evemonk_alertmanager
#    restart: unless-stopped
#    ports:
#      - '9093:9093'
#    volumes:
#      - './alertmanager/:/etc/alertmanager/'
#    command:
#      - '--config.file=/etc/alertmanager/config.yml'
#      - '--storage.path=/alertmanager'

#  grafana:
#    image: 'grafana/grafana:6.2.2'
#    container_name: evemonk_grafana
#    restart: unless-stopped
#    user: '104'
#    depends_on:
#      - prometheus
#    ports:
#      - '3001:3000' # 3001 is external
#    volumes:
#      - 'grafana_data:/var/lib/grafana'
#      - './grafana/provisioning/:/etc/grafana/provisioning/'
#    env_file:
#      - './grafana/config.monitoring'

  elasticsearch:
    image: 'elasticsearch:7.1.1'
    container_name: evemonk_elasticsearch
    restart: unless-stopped
    volumes:
      - 'elasticsearch_data:/usr/share/elasticsearch/data'
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms256M -Xmx256M"

#  sentry:
#    image: ''
#    depends_on:
#      - postgresql
#      - redis

  pghero:
    image: 'biow0lf/evemonk-pghero:latest'
    container_name: evemonk_pghero
    restart: unless-stopped
    env_file: .env
    depends_on:
      - postgresql

  backend:
    image: 'biow0lf/evemonk:latest'
    container_name: evemonk_backend
    restart: unless-stopped
    env_file: .env
    command: ./bin/backend.sh
    volumes:
      - 'app_shared:/shared'
      - './newrelic.yml:/app/config/newrelic.yml:ro'
    depends_on:
      - redis
      - memcached
      - postgresql
      - elasticsearch
#      - sentry
    ports:
      - '3000:3000'

  sidekiq:
    image: 'biow0lf/evemonk:latest'
    container_name: evemonk_sidekiq
    restart: unless-stopped
    env_file: .env
    command: ./bin/sidekiq.sh
    volumes:
      - './newrelic.yml:/app/config/newrelic.yml:ro'
    depends_on:
      - redis
      - memcached
      - postgresql
      - elasticsearch
#      - sentry
